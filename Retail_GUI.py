# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\F\songcc\Retial-GUI\Retail_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from myQTClass import MyQLabel,segmentationView
import backgroud_rc
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1600, 1008)
        Form.setStyleSheet("background-color: rgba(57, 84, 103, 120);")
        self.orgementaion_view = segmentationView(Form)
        self.orgementaion_view.setGeometry(QtCore.QRect(930, 90, 641, 641))
        self.orgementaion_view.setStyleSheet("background-color: rgb(245, 245, 237);")
        self.orgementaion_view.setText("")
        self.orgementaion_view.setObjectName("orgementaion_view")
        self.horizontalLayoutWidget = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(1460, 10, 121, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.window_control = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.window_control.setContentsMargins(0, 0, 0, 0)
        self.window_control.setObjectName("window_control")
        self.smallest = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.smallest.sizePolicy().hasHeightForWidth())
        self.smallest.setSizePolicy(sizePolicy)
        self.smallest.setMinimumSize(QtCore.QSize(32, 32))
        self.smallest.setMaximumSize(QtCore.QSize(32, 32))
        self.smallest.setSizeIncrement(QtCore.QSize(32, 32))
        self.smallest.setBaseSize(QtCore.QSize(32, 32))
        self.smallest.setStyleSheet("background-color: rgba(108, 108, 108, 0);")
        self.smallest.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/最小化.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.smallest.setIcon(icon)
        self.smallest.setIconSize(QtCore.QSize(20, 20))
        self.smallest.setObjectName("smallest")
        self.window_control.addWidget(self.smallest)
        self.biggest = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.biggest.sizePolicy().hasHeightForWidth())
        self.biggest.setSizePolicy(sizePolicy)
        self.biggest.setMinimumSize(QtCore.QSize(32, 32))
        self.biggest.setMaximumSize(QtCore.QSize(32, 32))
        self.biggest.setSizeIncrement(QtCore.QSize(32, 32))
        self.biggest.setBaseSize(QtCore.QSize(32, 32))
        self.biggest.setStyleSheet("background-color: rgba(108,108, 108, 0);")
        self.biggest.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/1-最大化.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.biggest.setIcon(icon1)
        self.biggest.setIconSize(QtCore.QSize(20, 20))
        self.biggest.setObjectName("biggest")
        self.window_control.addWidget(self.biggest)
        self.closed = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.closed.sizePolicy().hasHeightForWidth())
        self.closed.setSizePolicy(sizePolicy)
        self.closed.setMinimumSize(QtCore.QSize(32, 32))
        self.closed.setMaximumSize(QtCore.QSize(32, 32))
        self.closed.setSizeIncrement(QtCore.QSize(32, 32))
        self.closed.setBaseSize(QtCore.QSize(32, 32))
        self.closed.setStyleSheet("background-color: rgb(115, 115, 115,0);")
        self.closed.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/关闭.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.closed.setIcon(icon2)
        self.closed.setIconSize(QtCore.QSize(20, 20))
        self.closed.setObjectName("closed")
        self.window_control.addWidget(self.closed)
        self.image_view = MyQLabel(Form)
        self.image_view.setGeometry(QtCore.QRect(270, 90, 641, 641))
        self.image_view.setStyleSheet("background-color: rgb(245, 245, 237);")
        self.image_view.setText("")
        self.image_view.setObjectName("image_view")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(30, 10, 64, 64))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(64, 64))
        self.label.setMaximumSize(QtCore.QSize(64, 64))
        self.label.setSizeIncrement(QtCore.QSize(64, 64))
        self.label.setBaseSize(QtCore.QSize(64, 64))
        self.label.setStyleSheet("border-image: url(:/logo.png);\n"
"background-color: rgba(57, 84, 103, 0);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.parameters_area = QtWidgets.QTabWidget(Form)
        self.parameters_area.setGeometry(QtCore.QRect(20, 540, 231, 411))
        self.parameters_area.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.parameters_area.setStyleSheet("QTabBar::tab{height:40}\n"
"QTabBar::tab{width:115}\n"
"QTabBar::tab{background-color:rgb(245, 245, 237);color:rgb(0,0,0);font:12pt \'华光中雅_CNKI\'}\n"
"QTabBar::tab::selected{background-color:rgb(113, 223, 224);color:rgb(0,0,0);font:14pt \'华光中雅_CNKI\'};")
        self.parameters_area.setTabPosition(QtWidgets.QTabWidget.North)
        self.parameters_area.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.parameters_area.setObjectName("parameters_area")
        self.Segment_tag = QtWidgets.QWidget()
        self.Segment_tag.setObjectName("Segment_tag")
        self.OPD_segment = QtWidgets.QPushButton(self.Segment_tag)
        self.OPD_segment.setGeometry(QtCore.QRect(0, 90, 231, 41))
        self.OPD_segment.setMouseTracking(True)
        self.OPD_segment.setTabletTracking(False)
        self.OPD_segment.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.OPD_segment.setText("Segment OD")
        self.OPD_segment.setObjectName("OPD_segment")
        self.vessel_segment = QtWidgets.QPushButton(self.Segment_tag)
        self.vessel_segment.setGeometry(QtCore.QRect(0, 210, 231, 41))
        self.vessel_segment.setMouseTracking(True)
        self.vessel_segment.setTabletTracking(False)
        self.vessel_segment.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.vessel_segment.setText("Segment Vessel")
        self.vessel_segment.setObjectName("vessel_segment")
        self.AV_segment = QtWidgets.QPushButton(self.Segment_tag)
        self.AV_segment.setGeometry(QtCore.QRect(0, 270, 231, 41))
        self.AV_segment.setMouseTracking(True)
        self.AV_segment.setTabletTracking(False)
        self.AV_segment.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.AV_segment.setText("Segment Artery Vein")
        self.AV_segment.setObjectName("AV_segment")
        self.load_model = QtWidgets.QPushButton(self.Segment_tag)
        self.load_model.setGeometry(QtCore.QRect(0, 20, 231, 41))
        self.load_model.setMouseTracking(True)
        self.load_model.setTabletTracking(False)
        self.load_model.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.load_model.setText("Load Model")
        self.load_model.setObjectName("load_model")
        self.OPC_segment = QtWidgets.QPushButton(self.Segment_tag)
        self.OPC_segment.setGeometry(QtCore.QRect(0, 150, 231, 41))
        self.OPC_segment.setMouseTracking(True)
        self.OPC_segment.setTabletTracking(False)
        self.OPC_segment.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.OPC_segment.setText("Segment OC")
        self.OPC_segment.setObjectName("OPC_segment")
        self.parameters_area.addTab(self.Segment_tag, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.diameter_estimate = QtWidgets.QPushButton(self.tab_2)
        self.diameter_estimate.setGeometry(QtCore.QRect(0, 70, 241, 41))
        self.diameter_estimate.setMouseTracking(True)
        self.diameter_estimate.setTabletTracking(False)
        self.diameter_estimate.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.diameter_estimate.setText("Calculate Interested Vessel Diameter")
        self.diameter_estimate.setObjectName("diameter_estimate")
        self.curvature = QtWidgets.QPushButton(self.tab_2)
        self.curvature.setGeometry(QtCore.QRect(0, 170, 231, 41))
        self.curvature.setMouseTracking(True)
        self.curvature.setTabletTracking(False)
        self.curvature.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.curvature.setText("Calculate Vascular Curvature")
        self.curvature.setObjectName("curvature")
        self.branch_angle = QtWidgets.QPushButton(self.tab_2)
        self.branch_angle.setGeometry(QtCore.QRect(0, 220, 231, 41))
        self.branch_angle.setMouseTracking(True)
        self.branch_angle.setTabletTracking(False)
        self.branch_angle.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.branch_angle.setText("Calculate Branch Angle")
        self.branch_angle.setObjectName("branch_angle")
        self.fracta_dim = QtWidgets.QPushButton(self.tab_2)
        self.fracta_dim.setGeometry(QtCore.QRect(0, 270, 231, 41))
        self.fracta_dim.setMouseTracking(True)
        self.fracta_dim.setTabletTracking(False)
        self.fracta_dim.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.fracta_dim.setText("Calculate Fractal Dimension")
        self.fracta_dim.setObjectName("fracta_dim")
        self.oDandoC_diameter = QtWidgets.QPushButton(self.tab_2)
        self.oDandoC_diameter.setGeometry(QtCore.QRect(-10, 20, 241, 41))
        self.oDandoC_diameter.setMouseTracking(True)
        self.oDandoC_diameter.setTabletTracking(False)
        self.oDandoC_diameter.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.oDandoC_diameter.setText("Calculate OD OC Diameter")
        self.oDandoC_diameter.setObjectName("oDandoC_diameter")
        self.CRAEandCRVE = QtWidgets.QPushButton(self.tab_2)
        self.CRAEandCRVE.setGeometry(QtCore.QRect(0, 120, 241, 41))
        self.CRAEandCRVE.setMouseTracking(True)
        self.CRAEandCRVE.setTabletTracking(False)
        self.CRAEandCRVE.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.CRAEandCRVE.setText("CRAE CRVE")
        self.CRAEandCRVE.setObjectName("CRAEandCRVE")
        self.parameters_area.addTab(self.tab_2, "")
        self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setGeometry(QtCore.QRect(100, 10, 1020, 75))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMinimumSize(QtCore.QSize(1020, 75))
        self.textEdit.setMaximumSize(QtCore.QSize(1020, 75))
        self.textEdit.setSizeIncrement(QtCore.QSize(1020, 75))
        self.textEdit.setBaseSize(QtCore.QSize(1020, 75))
        font = QtGui.QFont()
        font.setFamily("华光中雅_CNKI")
        font.setPointSize(28)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.textEdit.setFont(font)
        self.textEdit.setStyleSheet("background-color: rgba(255, 255, 255, 0);\n"
"gridline-color: rgba(255, 255, 255, 0);\n"
"border-left:0px solid red;\n"
"font: 28pt \"华光中雅_CNKI\";")
        self.textEdit.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 90, 242, 141))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.open_file = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.open_file.setMinimumSize(QtCore.QSize(220, 40))
        self.open_file.setMouseTracking(True)
        self.open_file.setTabletTracking(False)
        self.open_file.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.open_file.setText("Load Image")
        self.open_file.setObjectName("open_file")
        self.verticalLayout.addWidget(self.open_file)
        self.load_result = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.load_result.setMinimumSize(QtCore.QSize(220, 40))
        self.load_result.setMouseTracking(True)
        self.load_result.setTabletTracking(False)
        self.load_result.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.load_result.setText("Load Result")
        self.load_result.setObjectName("load_result")
        self.verticalLayout.addWidget(self.load_result)
        self.save_result = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.save_result.setMinimumSize(QtCore.QSize(220, 40))
        self.save_result.setMouseTracking(True)
        self.save_result.setTabletTracking(False)
        self.save_result.setStyleSheet("background-color: rgba(105, 128, 196);\n"
"font: 11pt \"黑体\";")
        self.save_result.setText("Save Result")
        self.save_result.setObjectName("save_result")
        self.verticalLayout.addWidget(self.save_result)
        self.Display_info = QtWidgets.QTextEdit(Form)
        self.Display_info.setGeometry(QtCore.QRect(270, 750, 641, 221))
        self.Display_info.setStyleSheet("background-color: rgb(245, 245, 237);")
        self.Display_info.setObjectName("Display_info")
        self.Display_para = QtWidgets.QTextEdit(Form)
        self.Display_para.setGeometry(QtCore.QRect(930, 750, 641, 221))
        self.Display_para.setStyleSheet("background-color: rgb(245, 245, 237);")
        self.Display_para.setObjectName("Display_para")

        self.retranslateUi(Form)
        self.parameters_area.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.parameters_area.setTabText(self.parameters_area.indexOf(self.Segment_tag), _translate("Form", "Segment"))
        self.parameters_area.setTabText(self.parameters_area.indexOf(self.tab_2), _translate("Form", "Calculate"))
        self.textEdit.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'华光中雅_CNKI\'; font-size:26pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-size:32pt; font-weight:600; color:#f5f5ed;\">Color Fundus Image Analysis System</span></p></body></html>"))

class Ui_load_result(object):
    def setupUi(self, load_result):
        load_result.setObjectName("load_result")
        self.verticalLayoutWidget = QtWidgets.QWidget(load_result)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 350, 241))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.load_OD = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.load_OD.setMinimumSize(QtCore.QSize(0, 50))
        self.load_OD.setObjectName("load_OD")
        self.verticalLayout.addWidget(self.load_OD)
        self.load_OC = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.load_OC.setEnabled(True)
        self.load_OC.setMinimumSize(QtCore.QSize(30, 50))
        self.load_OC.setObjectName("load_OC")
        self.verticalLayout.addWidget(self.load_OC)
        self.load_vessel = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.load_vessel.setMinimumSize(QtCore.QSize(0, 50))
        self.load_vessel.setObjectName("load_vessel")
        self.verticalLayout.addWidget(self.load_vessel)
        self.load_AV = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.load_AV.setEnabled(True)
        self.load_AV.setMinimumSize(QtCore.QSize(0, 50))
        self.load_AV.setObjectName("load_AV")
        self.verticalLayout.addWidget(self.load_AV)

        self.retranslateUi(load_result)
        QtCore.QMetaObject.connectSlotsByName(load_result)

    def retranslateUi(self, load_result):
        _translate = QtCore.QCoreApplication.translate
        load_result.setWindowTitle(_translate("load_result", "load_result"))
        self.load_OD.setText(_translate("load_result", "Load OD Segmentation Result"))
        self.load_OC.setText(_translate("load_result", "Load OD Segmentation Result"))
        self.load_vessel.setText(_translate("load_result", "Load Vessel Segmentation Result"))
        self.load_AV.setText(_translate("load_result", "Load Artery Vein Segmentation Result"))
